(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{88:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return l})),t.d(n,"metadata",(function(){return p})),t.d(n,"toc",(function(){return o})),t.d(n,"default",(function(){return b}));var i=t(3),a=t(8),r=(t(0),t(108)),c=["components"],l={},p={unversionedId:"reference/extra",id:"reference/extra",isDocsHomePage:!1,title:"Extra API",description:"the bhdl/splicing language",source:"@site/docs/reference/2.extra.md",sourceDirName:"reference",slug:"/reference/extra",permalink:"/docs/reference/extra",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/reference/2.extra.md",version:"current",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"API",permalink:"/docs/reference/api"},next:{title:"Administrator Setup",permalink:"/docs/reference/admin"}},o=[{value:"requiring <code>pict</code> library with prefix",id:"requiring-pict-library-with-prefix",children:[]},{value:"Auto Placement",id:"auto-placement",children:[]}],s={toc:o};function b(e){var n=e.components,t=Object(a.a)(e,c);return Object(r.b)("wrapper",Object(i.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("p",null,"the ",Object(r.b)("inlineCode",{parentName:"p"},"bhdl/splicing")," language"),Object(r.b)("p",null,"The language ",Object(r.b)("inlineCode",{parentName:"p"},"bhdl/splicing"),' is not BHDL syntax. It provides a simple "splicing\nsyntax" for function application:'),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-lisp"},"#lang reader bhdl/splicing\n\n(list 1 2 (list 3 4) .. 5)\n;; equivalent to\n(list 1 2 3 4 5)\n;; which evaluates to => '(1 2 3 4 5)\n")),Object(r.b)("h2",{id:"requiring-pict-library-with-prefix"},"requiring ",Object(r.b)("inlineCode",{parentName:"h2"},"pict")," library with prefix"),Object(r.b)("p",null,"Since ",Object(r.b)("inlineCode",{parentName:"p"},"bhdl")," re-exposes ",Object(r.b)("inlineCode",{parentName:"p"},"*-append")," and ",Object(r.b)("inlineCode",{parentName:"p"},"*-superimpose")," functions to be generic\nto ",Object(r.b)("inlineCode",{parentName:"p"},"bhdl")," components and circuits, if you want to import ",Object(r.b)("inlineCode",{parentName:"p"},"pict"),", you need to\nprefix it, e.g.:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-lisp"},"(require (prefix-in pict: pict))\n")),Object(r.b)("h2",{id:"auto-placement"},"Auto Placement"),Object(r.b)("p",null,"We implemented an analytical global placer and a simulated annealing detailed\nplacer. To use them, follow the above installation guide to setup the julia\nenvironment and run the server in the backend:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"julia --project server.jl\n")),Object(r.b)("p",null,"You can then send the placement request to backend server via:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-lisp"},"(define place-result\n    (send-for-placement\n     (Composite->place-spec whole\n                            #:place-nsteps 50\n                            #:place-nbins 300\n                            #:sa-ncycles 10\n                            #:sa-nsteps 3000\n                            #:sa-stepsize 10\n                            #:sa-theta-stepsize 0.3)))\n")),Object(r.b)("p",null,"You can visualize the placed Composite via:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-lisp"},"(Composite->pict whole place-result)\n")))}b.isMDXComponent=!0}}]);